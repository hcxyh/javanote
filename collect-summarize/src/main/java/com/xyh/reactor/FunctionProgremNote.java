package com.xyh.reactor;

public class FunctionProgremNote {


    /**
     * 简单梳理下 编程范式 以及同步异步 和 设计模式的关系
     * 1.编程范式
     *      oop (对数据的抽象 )  将数据抽象为一个对象,封装,继承,多态.
     *          异步可以通过多线程方式实现,
     *              或者使用发布订阅实现异步.
     *      fp (对行为的抽象),
     *          函数是第一公民,并且函数内部都是不可变变量,不存在线程安全问题.
     *
     *      rxJava等响应式编程框架,
     *          是基于事件的发布订阅设计模式的异步。
     *
     *  2.发布订阅 和 观察者模式的区别和联系
     *      场景:用户登录操作之后,在req请求主线程判断密码校验通过,则发布登录事件,
     *      订阅登录事件的各个子业务系统进行后续处理.(发券,添加积分)
     *
     *      nio,netty,也是使用基于事件的发布订阅的模式来实现异步.
     *      Netty的所有IO操作都是异步非阻塞的，通过Future-Listener机制，用户可以方便的主动获取或者通过通知机制获得IO操作结果。
     *
     *
     */



}
