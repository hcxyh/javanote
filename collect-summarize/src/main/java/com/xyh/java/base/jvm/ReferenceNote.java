package com.xyh.java.base.jvm;

/**
 * 
 * @author hcxyh  2018年8月11日
 *
 */
public class ReferenceNote {
	/**
	 * java中的四种引用:
	 	一、Java引用的四种状态：
		强引用：
		用的最广。我们平时写代码时，new一个Object存放在堆内存，然后用一个引用指向它，这就是强引用。
		如果一个对象具有强引用，那垃圾回收器绝不会回收它。当内存空间不足，Java虚拟机宁愿抛出OutOfMemoryError错误，
		使程序异常终止，也不会靠随意回收具有强引用的对象来解决内存不足的问题。
		软引用：
		如果一个对象只具有软引用，则内存空间足够时，垃圾回收器就不会回收它；如果内存空间不足了，就会回收这些对象的内存。
		（备注：如果内存不足，随时有可能被回收。）
		只要垃圾回收器没有回收它，该对象就可以被程序使用。软引用可用来实现内存敏感的高速缓存。
		弱引用：
		弱引用与软引用的区别在于：只具有弱引用的对象拥有更短暂的生命周期。
		每次执行GC的时候，一旦发现了只具有弱引用的对象，不管当前内存空间足够与否，都会回收它的内存。
		不过，由于垃圾回收器是一个优先级很低的线程，因此不一定会很快发现那些只具有弱引用的对象。
		虚引用：
		“虚引用”顾名思义，就是形同虚设，与其他几种引用都不同，虚引用并不会决定对象的生命周期。
		如果一个对象仅持有虚引用，那么它就和没有任何引用一样，在任何时候都可能被垃圾回收器回收。
		
		虚引用主要用来跟踪对象被垃圾回收器回收的活动。
	 	
	 */

}
