package com.xyh.db.mysql;

/**
 * 
 * @author hcxyh  2018年8月11日
 *
 */
public class Drds {
	/**
	 	1.分库分表方案
	 	什么是最好的MySQL分库分表方案？我想到的有：
			1、应用层切分？
			2、MySQL代理层切分？
			3、提供查找数据库分片的中心服务？
		你切分数据库的原因无非因为数据库的读或者写：
		数据库写
		写操作永久的超过了服务器的磁盘负载；太多写入导致副本同步永远的落后了。
		数据库读
		读取到的数据量太大以至于称爆内存；并且大多数读操作开始直击磁盘而不是从内存中读取数据。
			a)分布式环境下，你将A节点的表和B节点的表进行join，甚至有些表的数据大到超过一个节点，
			在A节点和B节点将数据join起来,然后将B节点和C节点join后的数据再次聚合。
			你开始写单方面的hash应用程序来解决这个问题（或者你可以再造MySQL的集群），
			这表示结果你得到一大堆的非声明式的SQL，而且让程序以一种面向过程的方式开始工作。
			b)你招致了大量的网络延时
			c)但是外键约束，其他保证数据完整性的SQL机制，对于跨多个节点是无能为力的。
			d)MySQL没有API保证异步查询返回顺序结果
				{
					当相同类型的数据存放在多个节点上（比如用户数据存放在A,B,C节点上），水平查询需要访问所有节点，
					数据访问时间直接因以节点数线性增长。除非多个节点是以并行方式访问，
					然后再以Map-Reduce的方式聚合。
					前提是需要提供异步通信的API，但这并不存在于MySQL提供的功能中。
					可选的方案是在子进程中增加很多的forking和连接。
				}
		
		
	 */
}
