package com.xyh.spring.batch;

public class SpringBatchNote {
	
	/**
	  *	批处理作业两个典型特征是批量执行与自动执行（需要无人值守）：
	  *	前者能够处理大批量数据的导入、导出和业务逻辑计算；
	  *	后者无需人工干预，能够自动化执行批量任务。 
	  *批量的每个单元都需要错误处理和回退；
	  *-------------------------
	 *	每个单元在不同平台中运行；
	 *	需要有分支选择；
	 *	每个单元需要监控和获取单元处理日志；
	 *	提供多种触发规则，按日期，日历，周期触发；
	 * 	--------------------------------------
	 * 	定期提交批处理任务（日终处理）
	 *	并行批处理：并行处理任务
	 *	企业消息驱动处理     
	 *	大规模的并行处理
	 *	手动或定时重启
	 *	按顺序处理依赖的任务(可扩展为工作流驱动的批处理)  --->  有状态的taskJob
	 *	部分处理：忽略记录(例如在回滚时)
	 *	完整的批处理事务
	 * ------------------------------------
	 *	个人总结：
	 *	分布式调度定时任务:
	 *	1.elastic-job可以提供平滑扩容,基于zk,进行多分片作业,工作单元以主机为单元.
	 *	不进行分片，只是相当于一个定时任务.
	 *	2.xx-job,通过quartz基于数据库的集群来实现分布式.
	 *	3.spring-batch 的并行是基于线程的. 
	 *		a)- 单个进程，多线程 
	 *		b)- 多个进程
	 *
	 * 	若分片是以pc为基本单元,则我倾向于使用elastic-job,
	 * 	不能提供fork-join,或者mapreduce这种.以处理器多核为单位分片.
	 *  ----------------------------------------------------------------------
	 *  技术选型考虑点：
	 *  健壮性：不会因为无效数据或错误数据导致程序崩溃；
	 *  可靠性：通过跟踪、监控、日志及相关的处理策略（重试、跳过、重启）实现批作业的可靠执行；
	 *  扩展性：通过并发或者并行技术实现应用的纵向和横向扩展，满足海量数据处理的性能需求；
	 * 
	 */
}
